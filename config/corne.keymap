/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cc {
            bindings = <&kp LC(C)>;
            key-positions = <13 16>;
        };

        cv {
            bindings = <&kp LC(V)>;
            key-positions = <13 15>;
        };

        asdf {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20 21 22>;
        };

        asdfcf {
            bindings = <&kp BACKSPACE>;
            key-positions = <13 14>;
        };

        asfasfdasd {
            bindings = <&kp LC(A)>;
            key-positions = <24 14>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp LS(TAB)       &kp Q  &kp W  &kp E         &kp R      &kp T    &kp Y      &kp U        &kp I      &kp O    &kp P      &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D         &kp F      &kp G    &kp H      &kp J        &kp K      &kp L    &kp COLON  &kp ENTER
&kp LEFT_CONTROL  &kp Z  &kp X  &kp V         &kp C      &kp B    &kp N      &kp M        &kp COMMA  &kp DOT  &kp FSLH   &kp ENTER
                                &kp LEFT_ALT  &kp SPACE  &mo 1    &kp SPACE  &lt 1 SPACE  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp ESCAPE            &kp MINUS           &mt AMPERSAND N7          &mt ASTERISK N8     &mt LEFT_PARENTHESIS N9  &kp PLUS           &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS        &kp LEFT_BRACKET           &kp RIGHT_BRACKET
&kp LS(CAPS)          &HML EXCL NUMBER_1  &HML AT NUMBER_2          &HML HASH NUMBER_3  &HML DOLLAR NUMBER_4     &HML PERCENT N5    &HML CARET NUMBER_6   &HML AMPERSAND N7      &HML ASTERISK N8      &HML KP_LEFT_PARENTHESIS N9  &HML RIGHT_PARENTHESIS N0  &kp DOLLAR
&kp NON_US_BACKSLASH  &kp LEFT_SHIFT      &mt EXCLAMATION NUMBER_1  &kp V               &kp V                    &kp ENTER          &kp LA(LS(MINUS))     &kp LS(LC(TAB))        &kp PAGE_DOWN         &kp MINUS                    &kp LC(TAB)                &kp TILDE
                                                                    &kp LEFT_GUI        &kp SPACE                &kp LEFT_SHIFT     &kp SPACE             &kp LG(LS(LEFT))       &kp LS(LG(RIGHT))
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp ESC  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6            &kp F7        &kp F8             &kp F9            &kp F10       &kp F11
&trans   &trans  &trans  &trans  &trans  &trans    &trans            &kp C_PREV    &kp K_VOLUME_DOWN  &kp LS(K_VOL_UP)  &kp C_NEXT    &kp GRAVE
&trans   &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3      &bt BT_SEL 4  &bt BT_CLR
                         &trans  &trans  &trans    &kp C_PLAY_PAUSE  &trans        &kp C_MUTE
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp C   &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
